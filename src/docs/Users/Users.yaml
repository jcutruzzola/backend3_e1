paths:
  /api/users:
    get:
      summary: Obtenemos todos los usuarios de la DB.
      tags:
        - Users
      responses:
        "200":
          description: Obtienen todos los usuarios correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/User"
        "500":
          description: Error interno del servidor.
    post:
      summary: Crea un usuario.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createUser"
      responses:
        "201":
          description: Usuario creado correctamente.
        "500":
          description: Error interno del servidor.
  /api/users/{uid}:
    get:
      summary: Obtiene un solo usuario por id.
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario que se quiere buscar.
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado.
          content:
            application/json:
              schema:
              type: array
              items:
                $ref: "#components/schemas/User"
        "500":
          description: Error interno del servidor.
    put:
      summary: Actualizamos un usuario por ID.
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario que se quiere actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateUser"
      responses:
        "200":
          description: Usuario actualizado
        "404":
          description: Usuario no encontrado.
        "500":
          description: Error interno del servidor.
        

components:
  schemas:
    User:
      type: object
      properties:
        _id: 
          type: ObjectId
          description: Id autogenerado por MongoDB
        first_name:
          type: string
          description: Nombre del usuario.
        last_name:
          type: string
          description: Apellido del usuario.
        password:
          type: string
          description: Password del usuario.
      example:
        _id: ObjectId("123456")
        first_name: Tinki
        last_name: Winki
        password: 1234

  requestBodies:
    createUser:
      type: Object
      properties:
        first_name:
          type: string
          description: Nombre de usuario.
        last_name:
          type: string
          description: Apellido del usuario
        password:
          type: string
          description: Password del usuario.
        email:
          type: string
          description: Email del usuario.
      example:
        first_name: Mirta
        last_name: Legrand
        password: 1234
        email: chiqui@legrand.com
    updateUser:
      type: Object
      properties:
        first_name:
          type: string
          description: Nombre del usuario.
        last_name:
          type: string
          description: Apellido del usuario.
        password:
          type: string
          description: Password del usuario.
        email:
          type: string
          description: Email del usuario.
      example:
        first_name: Mirta
        last_name: Legrand
        password: 1234
        email: chiqui@legrand.com

        

        

